{"version":3,"sources":["components/Navbar.js","pages/FavoritePage.js","lib/api.js","reducers/loading.js","reducers/data.js","components/AllCat.js","components/StoreBuild.js","components/FetchBuild.js","pages/TestPage.js","components/AllStores.js","components/Banner.js","components/Sort.js","pages/MainPage.js","pages/OrderHistoryPage.js","pages/ProfilePage.js","pages/SearchPage.js","components/CatNav.js","components/BodyBlackoutStyle.js","reducers/cart.js","components/DetailMenuModal.js","components/Menu.js","components/DetailMenus.js","components/Bill.js","components/DeliveryInfo.js","components/StoreInfo.js","components/Details.js","pages/DetailPage.js","pages/PaymentPage.js","lib/client.js","lib/authorization.js","reducers/auth.js","components/Header.js","pages/LoginPage.js","pages/RegisterPage.js","App.js","reportWebVitals.js","reducers/index.js","reducers/store.js","index.js"],"names":["Navbar","className","to","FavoritePage","getCategories","axios","get","getStores","getDetails","storeId","getMenus","menuId","START_LOADING","FINISH_LOADING","startLoading","requestType","type","finishLoding","initialStete","loading","state","action","payload","getCatSaga","getStoresSaga","getDetailsSaga","getMenusSaga","dataSaga","GET_CAT","GET_CAT_SUCCESS","GET_CAT_FAILURE","GET_STORES","GET_STORES_SUCCESS","GET_STORES_FAILURE","GET_DETAILS","GET_DETAILS_SUCCESS","GET_DETAILS_FAILURE","GET_MENUS","GET_MENUS_SUCCESS","GET_MENUS_FAILURE","put","call","api","cat","data","error","stores","details","menus","takeLatest","AllCat","useSelector","loadingCat","catDispatch","useDispatch","useEffect","map","category","text","name","React","memo","StoreBuild","store","id","grade","feedNum","deliveryCost","FetchBuild","setCount","fetchMoreTrigger","useRef","fetchMoreObserver","IntersectionObserver","isIntersecting","prev","observe","current","unobserve","ref","startNum","TestPage","reduxData","useState","count","setStores","setLoading","seperatedData","slice","e","console","log","fetchData","AllStores","loadingStores","dispatch","Banner","Sort","MainPage","OrderHistoryPage","ProfilePage","SearchPage","CatNav","moveToPage","menu_groups","idx","onClick","BodyBlackoutStyle","onSetIsVisible","ADD_CART","RESET_CART","REMOVE_CART","removeCart","bills","cart","concat","bill","filter","transStrToInt","strPrice","Number","replace","DetailMenuModal","setIsVisible","menuCnt","setMenuCnt","sumMenuPrice","setSumMenuPrice","undefined","defaultPrice","setDefaultPrice","totalPrice","setTotalPrice","formRef","detailMenus","menuDispatch","cartDispatch","onSubmitBtn","formData","Array","from","FormData","optionMenus","join","menuName","addCart","tempPrice","price","option_groups","sort","a","b","required","src","image","alt","description","alert","group","min","max","options","option","value","check","menuPrice","values","onInputBtn","htmlFor","Menu","menu","isVisible","active","DetailMenus","forwardRef","Bill","delivery_charge","cartData","sumPirce","setSumPrice","payment","reduce","acc","cur","length","DeliveryInfo","delivery_time","minimum_order_amount","StoreInfo","title","review_count","Details","contentRef","loadingDetails","detailsDisaptch","poster_image","index","scrollIntoView","block","behavior","r","DetailPage","match","params","pathname","useLocation","window","scrollTo","PaymentPage","history","storeName","onPayBtn","useCallback","push","placeholder","client","create","defaults","withCredentials","login","email","password","post","register","logout","delete","loginSaga","registerSaga","checkSaga","logoutSaga","authSaga","CHANGE_FIELD","INITIALIZE_FORM","LOGIN","LOGIN_SUCCESS","LOGIN_FAILURE","REGISTER","CHECK","CHECK_SUCCESS","CHECK_FAILURE","LOGOUT","LOGOUT_SUCCESS","changeField","form","key","initializeForm","authApi","response","ACCESS_TOKEN","headers","authorization","common","localStorage","setItem","token","removeItem","passwordConfirm","phoneNum","auth","authError","user","checkError","Header","onLogoutBtn","getItem","LoginPage","onChange","target","JSON","stringify","onSubmit","preventDefault","RegisterPage","authDispatch","App","path","component","exact","render","location","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootSaga","all","rootReducer","combineReducers","sagaMiddleware","createSagaMiddleware","createStore","composeWithDevTools","applyMiddleware","run","ReactDOM","basename","document","getElementById"],"mappings":"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","file":"static/js/main.3e19efd5.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Navbar.scss';\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <div className=\"navbar\">\r\n      <ul className=\"navbar-item\">\r\n        <li>\r\n          <Link to=\"/\">메인</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/search\">검색</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/orderHistory\">주문기록</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/favorite\">즐겨찾기</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/profile\">프로필</Link>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\n\r\nconst FavoritePage = () => {\r\n  return (\r\n    <div>\r\n      <h1>즐겨찾기 페이지</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FavoritePage;\r\n","//https://delivery-service-web.herokuapp.com/api/documentation\r\nimport axios from 'axios';\r\n\r\nexport const getCategories = () =>\r\n  axios.get('http://localhost:4000/categories');\r\n\r\nexport const getStores = () => axios.get('http://localhost:4000/stores');\r\n\r\nexport const getDetails = (storeId) =>\r\n  axios.get(\r\n    `https://delivery-service-web.herokuapp.com/api/eateries/${storeId}`,\r\n  );\r\n\r\nexport const getMenus = (menuId) =>\r\n  axios.get(`https://delivery-service-web.herokuapp.com/api/menus/${menuId}`);\r\n","const START_LOADING = 'loading/START_LOADING';\r\nconst FINISH_LOADING = 'loading/FINISH_LOADING';\r\n\r\nexport const startLoading = (requestType) => ({\r\n  type: START_LOADING,\r\n  requestType,\r\n});\r\nexport const finishLoding = (requestType) => ({\r\n  type: FINISH_LOADING,\r\n  requestType,\r\n});\r\n\r\nconst initialStete = {};\r\n\r\nfunction loading(state = initialStete, action) {\r\n  switch (action.type) {\r\n    case START_LOADING:\r\n      return {\r\n        ...state,\r\n        [action.payload]: true,\r\n      };\r\n    case FINISH_LOADING:\r\n      return {\r\n        ...state,\r\n        [action.payload]: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default loading;\r\n","import * as api from '../lib/api';\r\nimport { call, put, takeLatest } from 'redux-saga/effects';\r\nimport { finishLoding, startLoading } from './loading';\r\n\r\n// 액션 타입 정의\r\nconst GET_CAT = 'data/GET_CAT';\r\nconst GET_CAT_SUCCESS = 'data/GET_CAT_SUCCESS';\r\nconst GET_CAT_FAILURE = 'data/GET_CAT_FAILURE';\r\n\r\nconst GET_STORES = 'data/GET_STORES';\r\nconst GET_STORES_SUCCESS = 'data/GET_STORES_SUCCESS';\r\nconst GET_STORES_FAILURE = 'data/GET_STORES_FAILURE';\r\n\r\nconst GET_DETAILS = 'data/GET_DETAILS';\r\nconst GET_DETAILS_SUCCESS = 'data/GET_DETAILS_SUCCESS';\r\nconst GET_DETAILS_FAILURE = 'data/GET_DETAILS_FAILURE';\r\n\r\nconst GET_MENUS = 'data/GET_MENUS';\r\nconst GET_MENUS_SUCCESS = 'data/GET_MENUS_SUCCESS';\r\nconst GET_MENUS_FAILURE = 'data/GET_MENUS_FAILURE';\r\n\r\n// 액션 생성 함수\r\nexport const getCat = () => ({ type: GET_CAT });\r\nexport const getStores = () => ({ type: GET_STORES });\r\nexport const getDetails = (storeId) => ({ type: GET_DETAILS, storeId });\r\nexport const getMenus = (menuId) => ({\r\n  type: GET_MENUS,\r\n  menuId,\r\n});\r\n\r\n// SAGA 작성\r\nfunction* getCatSaga() {\r\n  yield put(startLoading(GET_CAT));\r\n  try {\r\n    const cat = yield call(api.getCategories);\r\n\r\n    yield put({\r\n      type: GET_CAT_SUCCESS,\r\n      payload: cat.data,\r\n    });\r\n  } catch (e) {\r\n    yield put({\r\n      type: GET_CAT_FAILURE,\r\n      payload: e,\r\n      error: true,\r\n    });\r\n  }\r\n  yield put(finishLoding(GET_CAT));\r\n}\r\n\r\nfunction* getStoresSaga() {\r\n  yield put(startLoading(GET_STORES));\r\n  try {\r\n    const stores = yield call(api.getStores);\r\n\r\n    yield put({\r\n      type: GET_STORES_SUCCESS,\r\n      payload: stores.data,\r\n    });\r\n  } catch (e) {\r\n    yield put({\r\n      type: GET_STORES_FAILURE,\r\n      payload: e,\r\n      error: true,\r\n    });\r\n  }\r\n  yield put(finishLoding(GET_STORES));\r\n}\r\n\r\nfunction* getDetailsSaga(action) {\r\n  yield put(startLoading(GET_DETAILS));\r\n  try {\r\n    const details = yield call(api.getDetails, action.storeId);\r\n\r\n    yield put({\r\n      type: GET_DETAILS_SUCCESS,\r\n      payload: details.data.data,\r\n    });\r\n  } catch (e) {\r\n    yield put({\r\n      type: GET_DETAILS_FAILURE,\r\n      payload: e,\r\n      error: true,\r\n    });\r\n  }\r\n  yield put(finishLoding(GET_DETAILS));\r\n}\r\nfunction* getMenusSaga(action) {\r\n  yield put(startLoading(GET_MENUS));\r\n  try {\r\n    const menus = yield call(api.getMenus, action.menuId);\r\n\r\n    yield put({\r\n      type: GET_MENUS_SUCCESS,\r\n      payload: menus.data.data,\r\n    });\r\n  } catch (e) {\r\n    yield put({\r\n      type: GET_MENUS_FAILURE,\r\n      payload: e,\r\n      error: true,\r\n    });\r\n  }\r\n  yield put(finishLoding(GET_MENUS));\r\n}\r\n\r\n// SAGA 통합\r\nexport function* dataSaga() {\r\n  yield takeLatest(GET_CAT, getCatSaga);\r\n  yield takeLatest(GET_STORES, getStoresSaga);\r\n  yield takeLatest(GET_DETAILS, getDetailsSaga);\r\n  yield takeLatest(GET_MENUS, getMenusSaga);\r\n}\r\n\r\n// 초기값 설정\r\nconst initialStete = {\r\n  cat: null,\r\n  stores: null,\r\n  details: null,\r\n  menus: null,\r\n};\r\n\r\n// 리듀서 작성\r\nfunction data(state = initialStete, action) {\r\n  switch (action.type) {\r\n    case GET_CAT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        cat: action.payload,\r\n      };\r\n    case GET_STORES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        stores: action.payload,\r\n      };\r\n    case GET_DETAILS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        details: action.payload,\r\n      };\r\n    case GET_MENUS_SUCCESS:\r\n      return {\r\n        ...state,\r\n        menus: action.payload,\r\n      };\r\n    case GET_CAT_FAILURE:\r\n    case GET_STORES_FAILURE:\r\n    case GET_DETAILS_FAILURE:\r\n    case GET_MENUS_FAILURE:\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default data;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { getCat } from '../reducers/data';\r\nimport './AllCat.scss';\r\n\r\nconst AllCat = () => {\r\n  const cat = useSelector((state) => state.data.cat);\r\n  const loadingCat = useSelector((state) => state.data.GET_CAT);\r\n\r\n  const catDispatch = useDispatch();\r\n  useEffect(() => {\r\n    catDispatch(getCat());\r\n  }, [catDispatch]);\r\n\r\n  return (\r\n    <div className=\"allCat\">\r\n      {loadingCat && '로딩 중'}\r\n      {!loadingCat && cat && (\r\n        <div className=\"categories\">\r\n          {cat.map((category) => (\r\n            <div className=\"category\" key={category.name}>\r\n              <Link to={`/category/${category.text}`}>\r\n                <div className=\"category-box\"></div>\r\n                <p>{category.text}</p>\r\n              </Link>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(AllCat);\r\n","import React from 'react';\r\nimport { AiFillStar } from 'react-icons/ai';\r\nimport { Link } from 'react-router-dom';\r\nimport './StoreBuild.scss';\r\n\r\nconst StoreBuild = ({ loading, stores }) => {\r\n  return (\r\n    <div className=\"allStores\">\r\n      {loading && '로딩 중'}\r\n      {!loading &&\r\n        stores &&\r\n        stores.map((store) => (\r\n          <div className=\"item-card\" key={store.id}>\r\n            <Link to={`/detail/${store.id}`}>\r\n              <div className=\"card-img\"></div>\r\n              <div className=\"card-text\">\r\n                <div className=\"card-name\">{store.name}</div>\r\n                <div className=\"card-detail\">\r\n                  <AiFillStar />\r\n                  <p>\r\n                    {store.grade} ({store.feedNum}) · 배달비{' '}\r\n                    {store.deliveryCost}원\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </Link>\r\n          </div>\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StoreBuild;\r\n","import React, { useRef, useEffect } from 'react';\r\n\r\nconst FetchBuild = ({ loading, setCount }) => {\r\n  const fetchMoreTrigger = useRef(null);\r\n  const fetchMoreObserver = new IntersectionObserver(([{ isIntersecting }]) => {\r\n    if (isIntersecting) setCount((prev) => prev + 1);\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchMoreObserver.observe(fetchMoreTrigger.current);\r\n    return () => {\r\n      fetchMoreObserver.unobserve(fetchMoreTrigger.current);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      id=\"fetchMore\"\r\n      className={loading ? 'loading' : ''}\r\n      ref={fetchMoreTrigger}\r\n    >\r\n      .\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FetchBuild;\r\n","import React, { useEffect, useState } from 'react';\r\nimport StoreBuild from '../components/StoreBuild';\r\nimport FetchBuild from '../components/FetchBuild';\r\nimport { useSelector } from 'react-redux';\r\n\r\nlet startNum = 0;\r\n\r\nconst TestPage = () => {\r\n  const reduxData = useSelector((state) => state.data.stores);\r\n\r\n  const [count, setCount] = useState(0);\r\n  const [stores, setStores] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n\r\n    const fetchData = () => {\r\n      try {\r\n        let seperatedData = reduxData.slice(startNum, startNum + 3);\r\n\r\n        startNum += 3;\r\n\r\n        setStores((prev) => [...prev, ...seperatedData]);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    };\r\n\r\n    if (reduxData !== null) fetchData();\r\n\r\n    setLoading(false);\r\n  }, [count, reduxData]);\r\n\r\n  if (stores === []) {\r\n    return <div>로딩 중..</div>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <StoreBuild loading={loading} stores={stores} />\r\n      <FetchBuild loading={loading} setCount={setCount} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TestPage;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getStores } from '../reducers/data';\r\nimport TestPage from '../pages/TestPage';\r\nconst AllStores = () => {\r\n  const { loadingStores } = useSelector(({ data }) => ({\r\n    loadingStores: data.GET_STORES,\r\n  }));\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getStores());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      {loadingStores && '로딩 중'}\r\n      {!loadingStores && <TestPage />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(AllStores);\r\n","import React from 'react';\r\nimport './Banner.scss';\r\n\r\nconst Banner = () => {\r\n  return <div className=\"banner\"></div>;\r\n};\r\n\r\nexport default Banner;\r\n","import React from 'react';\r\nimport './Sort.scss';\r\n\r\nconst Sort = () => {\r\n  return <div className=\"sort\"></div>;\r\n};\r\n\r\nexport default Sort;\r\n","import React from 'react';\r\nimport AllCat from '../components/AllCat';\r\nimport AllStores from '../components/AllStores';\r\nimport Banner from '../components/Banner';\r\nimport Sort from '../components/Sort';\r\nimport './MainPage.scss';\r\n\r\nconst MainPage = () => {\r\n  return (\r\n    <div className=\"mainpage\">\r\n      <Banner />\r\n      <AllCat />\r\n      <div className=\"mainpage-title\">\r\n        <div className=\"title\">\r\n          <h2>전체보기</h2>\r\n          <hr />\r\n        </div>\r\n        <Sort />\r\n      </div>\r\n      <AllStores />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainPage;\r\n","import React from 'react';\r\n\r\nconst OrderHistoryPage = () => {\r\n  return (\r\n    <div>\r\n      <h1>주문 기록</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderHistoryPage;\r\n","import React from 'react';\r\n\r\nconst ProfilePage = () => {\r\n  return (\r\n    <div>\r\n      <h1>프로필 페이지</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n","import React from 'react';\r\n\r\nconst SearchPage = () => {\r\n  return (\r\n    <div>\r\n      <h1>검색 페이지</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchPage;\r\n","import React from 'react';\r\nimport './CatNav.scss';\r\n\r\nconst CatNav = ({ details, moveToPage }) => {\r\n  return (\r\n    <div className=\"catNav\">\r\n      <ul className=\"catNav-category\">\r\n        {details.menu_groups.map((category, idx) => (\r\n          <li key={category.name}>\r\n            <button onClick={moveToPage(idx)}>{category.name}</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CatNav;\r\n","import React from 'react';\r\nimport './BodyBlackoutStyle.scss';\r\n\r\nconst BodyBlackoutStyle = ({ onSetIsVisible }) => {\r\n  return (\r\n    <div\r\n      className=\"body-blackout-style\"\r\n      onClick={() => onSetIsVisible(false)}\r\n    ></div>\r\n  );\r\n};\r\n\r\nexport default BodyBlackoutStyle;\r\n","// 액션 타입 정의\r\nconst ADD_CART = 'cart/ADD_CART';\r\nconst RESET_CART = 'cart/RESET_CART';\r\nconst REMOVE_CART = 'cart/REMOVE_CART';\r\n\r\n// 액션 생성 함수\r\nlet id = 1;\r\nexport const addCart = (menuName, optionMenus, totalPrice) => ({\r\n  type: ADD_CART,\r\n  bill: {\r\n    id: id++,\r\n    menuName,\r\n    optionMenus,\r\n    totalPrice,\r\n  },\r\n});\r\n\r\nexport const resetCart = () => ({\r\n  type: RESET_CART,\r\n});\r\n\r\nexport const removeCart = (id) => ({\r\n  type: REMOVE_CART,\r\n  id,\r\n});\r\n\r\n// 초기값 설정\r\nconst initialStete = {\r\n  bills: [],\r\n};\r\n\r\n// 리듀서 작성\r\nfunction cart(state = initialStete, action) {\r\n  switch (action.type) {\r\n    case ADD_CART:\r\n      return {\r\n        ...state,\r\n        bills: state.bills.concat(action.bill),\r\n      };\r\n    case RESET_CART:\r\n      return {\r\n        ...state,\r\n        bills: [],\r\n        // bills: state.bills.splice(0),\r\n      };\r\n    case REMOVE_CART:\r\n      return {\r\n        ...state,\r\n        bills: state.bills.filter((bill) => bill.id !== action.id),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default cart;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addCart } from '../reducers/cart';\r\nimport { getMenus } from '../reducers/data';\r\n\r\nimport './DetailMenuModal.scss';\r\n\r\nconst transStrToInt = (strPrice) => Number(strPrice.replace(',', ''));\r\n\r\nconst DetailMenuModal = ({ menuId, setIsVisible }) => {\r\n  const [menuCnt, setMenuCnt] = useState(1);\r\n  const [sumMenuPrice, setSumMenuPrice] = useState(0);\r\n  const [defaultPrice, setDefaultPrice] = useState(undefined);\r\n  const [totalPrice, setTotalPrice] = useState(undefined);\r\n  const formRef = useRef(null);\r\n  const detailMenus = useSelector((state) => state.data.menus);\r\n  const menuDispatch = useDispatch();\r\n  const cartDispatch = useDispatch();\r\n\r\n  const onMinusBtn = () => {\r\n    if (menuCnt > 1) {\r\n      const nextMenuCnt = menuCnt - 1;\r\n      setMenuCnt(nextMenuCnt);\r\n    } else {\r\n      alert('1개 이상 선택해주세요.');\r\n    }\r\n  };\r\n\r\n  const onPlusBtn = () => {\r\n    const nextMenuCnt = menuCnt + 1;\r\n    setMenuCnt(nextMenuCnt);\r\n  };\r\n\r\n  const onInputBtn = (min, check) => {\r\n    const formData = new FormData(formRef.current);\r\n\r\n    let menuPrice = 0;\r\n    for (var value of formData.values()) {\r\n      menuPrice += transStrToInt(value);\r\n    }\r\n\r\n    setSumMenuPrice(menuPrice);\r\n  };\r\n\r\n  const onSubmitBtn = () => {\r\n    const formData = Array.from(new FormData(formRef.current));\r\n    setIsVisible(false);\r\n\r\n    const optionMenus = formData.map((data) => data[0]).join(' , ');\r\n    cartDispatch(addCart(detailMenus.name, optionMenus, totalPrice));\r\n  };\r\n\r\n  useEffect(() => {\r\n    menuDispatch(getMenus(menuId));\r\n  }, [menuId, menuDispatch]);\r\n\r\n  useEffect(() => {\r\n    const tempPrice = detailMenus\r\n      ? transStrToInt(detailMenus.price)\r\n      : undefined;\r\n    setDefaultPrice(tempPrice);\r\n    setTotalPrice(tempPrice);\r\n  }, [detailMenus]);\r\n\r\n  useEffect(() => {\r\n    const nextTotalPrice = defaultPrice * menuCnt + sumMenuPrice * menuCnt;\r\n    setTotalPrice(nextTotalPrice);\r\n  }, [menuCnt, defaultPrice, sumMenuPrice]);\r\n\r\n  if (detailMenus === null) {\r\n    return <div>로딩 중</div>;\r\n  }\r\n  detailMenus.option_groups.sort((a, b) => b.required - a.required);\r\n\r\n  return (\r\n    <div className=\"detail-menu-modal\">\r\n      <div className=\"detail-menu-modal-img\">\r\n        <img src={detailMenus.image} alt=\"상세 메뉴 이미지\"></img>\r\n      </div>\r\n      <div className=\"detail-modal-content\">\r\n        <div className=\"detail-modal-info\">\r\n          <h2>{detailMenus.name}</h2>\r\n          <p>{detailMenus.description}</p>\r\n        </div>\r\n        <div className=\"detail-modal-price\">\r\n          <p>가격</p>\r\n          <p>{totalPrice}원</p>\r\n        </div>\r\n        <div className=\"detail-modal-count\">\r\n          <p>수량</p>\r\n          <div className=\"detail-modal-count-btn\">\r\n            <button onClick={() => onMinusBtn()}>-</button>\r\n            <p>{menuCnt}</p>\r\n            <button onClick={() => onPlusBtn()}>+</button>\r\n          </div>\r\n        </div>\r\n        <div className=\"detail-modal-select-menus\">\r\n          <form ref={formRef}>\r\n            {detailMenus.option_groups.map((group) => (\r\n              <div className=\"menus-group\" key={group.name}>\r\n                <div className=\"menus-group-name\">\r\n                  <p>{`${group.name} (${group.min} ~ ${group.max})`}</p>\r\n                  <p>{group.required ? '필수 선택' : ' '}</p>\r\n                </div>\r\n                {group.options.map((option) => (\r\n                  <div className=\"menus-group-menu\" key={option.id}>\r\n                    <div>\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        id={option.id}\r\n                        name={option.name}\r\n                        value={transStrToInt(option.price)}\r\n                        onClick={() => onInputBtn(group.min, group.required)}\r\n                      />\r\n                      <label htmlFor={option.id}>{option.name}</label>\r\n                    </div>\r\n                    <p>+ {option.price}원</p>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            ))}\r\n          </form>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"detail-model-submit\">\r\n        <button onClick={() => onSubmitBtn()}>주문표에 추가</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(DetailMenuModal);\r\n","import React, { useState } from 'react';\r\nimport BodyBlackoutStyle from './BodyBlackoutStyle';\r\nimport DetailMenuModal from './DetailMenuModal';\r\nimport './Menu.scss';\r\n\r\nconst Menu = ({ menu, menuId }) => {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n\r\n  const onSetIsVisible = (active) => {\r\n    setIsVisible(active);\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"menu\" onClick={() => onSetIsVisible(true)}>\r\n        <div className=\"menu-info\">\r\n          <p className=\"menu-title\">{menu.name}</p>\r\n          <p className=\"menu-price\">{menu.price}원</p>\r\n          <p className=\"menu-desc\">{menu.description}</p>\r\n        </div>\r\n        <div className=\"menu-img\">\r\n          <img src={menu.image} alt=\"메뉴 사진\" />\r\n        </div>\r\n      </div>\r\n      <div>\r\n        {isVisible && <BodyBlackoutStyle onSetIsVisible={onSetIsVisible} />}\r\n        {isVisible && (\r\n          <DetailMenuModal menuId={menu.id} setIsVisible={setIsVisible} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Menu;\r\n","import React, { forwardRef } from 'react';\r\nimport './DetailMenus.scss';\r\nimport Menu from './Menu';\r\n\r\nconst DetailMenus = ({ category }, ref) => {\r\n  return (\r\n    <div>\r\n      <div className=\"detailMenus\">\r\n        <p className=\"detailMenus-category\" ref={ref}>\r\n          {category.name}\r\n        </p>\r\n        {category.menus.map((menu) => (\r\n          <Menu menu={menu} menuId={menu.id} key={menu.id} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default forwardRef(DetailMenus);\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\r\nimport { Link } from 'react-router-dom';\r\nimport { removeCart } from '../reducers/cart';\r\nimport './Bill.scss';\r\n\r\nconst transStrToInt = (strPrice) => Number(strPrice.replace(',', ''));\r\n\r\nconst Bill = () => {\r\n  const deliveryCost = useSelector(\r\n    (state) => state.data.details.delivery_charge,\r\n  );\r\n  const storeId = useSelector((state) => state.data.details.id);\r\n  const cartData = useSelector((state) => state.cart.bills);\r\n  const cartDispatch = useDispatch();\r\n  const [sumPirce, setSumPrice] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const payment = cartData.reduce((acc, cur) => {\r\n      return acc + cur.totalPrice;\r\n    }, 0);\r\n\r\n    setSumPrice(payment);\r\n  }, [cartData]);\r\n\r\n  const onRemoveBtn = (id) => {\r\n    cartDispatch(removeCart(id));\r\n  };\r\n\r\n  return (\r\n    <div className=\"bill\">\r\n      <div className=\"bill-title\">\r\n        <p>주문표</p>\r\n      </div>\r\n      <div className=\"bill-content\">\r\n        {cartData.length > 0 ? (\r\n          cartData.map((data) => (\r\n            <div className=\"bill-content-data\" key={data.id}>\r\n              <div className=\"bill-content-data-header\">\r\n                <p>\r\n                  {`${data.id}  `} <strong>{data.menuName}</strong>\r\n                </p>\r\n                <p>\r\n                  {data.totalPrice}원{' '}\r\n                  <AiOutlineCloseCircle onClick={() => onRemoveBtn(data.id)} />\r\n                </p>\r\n              </div>\r\n              <p className=\"bill-content-data-options\">{data.optionMenus}</p>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <div>\r\n            <p className=\"bill-content-not-data\">아직 주문 내역이 없습니다.</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className=\"bill-delivery_cost\">배달비 : {deliveryCost}</div>\r\n      <div className=\"bill-pay_button\">\r\n        {cartData.length > 0 ? (\r\n          <button>\r\n            <Link to={`/detail/${storeId}/payment`}>\r\n              <div>\r\n                <p>{cartData.length}</p>\r\n              </div>\r\n              <p>{sumPirce + transStrToInt(deliveryCost)}원 결제하기</p>\r\n            </Link>\r\n          </button>\r\n        ) : (\r\n          <button onClick={() => alert('메뉴를 추가해 주세요.')}>\r\n            <div>\r\n              <p>{cartData.length}</p>\r\n            </div>\r\n            <p>결제 하기</p>\r\n          </button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Bill);\r\n","import React from 'react';\r\nimport { BsClock } from 'react-icons/bs';\r\nimport './DeliveryInfo.scss';\r\n\r\nconst DeliveryInfo = ({ details }) => {\r\n  return (\r\n    <div className=\"store-delivery-info\">\r\n      <div className=\"store-delivery-info-header\">\r\n        <BsClock />\r\n        <p>{details.delivery_time}</p>\r\n      </div>\r\n\r\n      <div className=\"store-delivery-price-info\">\r\n        <p className=\"store-delivery-text\">배달비</p>\r\n        <p>\r\n          <strong>{details.delivery_charge}원</strong>\r\n        </p>\r\n      </div>\r\n      <div className=\"store-delivery-price-info\">\r\n        <p className=\"store-delivery-text\">최소주문</p>\r\n        <p>{details.minimum_order_amount}원</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DeliveryInfo;\r\n","import React from 'react';\r\nimport { AiFillStar } from 'react-icons/ai';\r\nimport './StoreInfo.scss';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst StoreInfo = ({ details }) => {\r\n  return (\r\n    <div className=\"store-info\">\r\n      <p className=\"store-into-name\">{details.title}</p>\r\n      <div className=\"store-info-detail\">\r\n        <AiFillStar />\r\n        <p className=\"store-grade\">{details.grade} </p>\r\n        <p className=\"store-review\">\r\n          <Link to=\"#\">\r\n            리뷰 <strong>{details.review_count}</strong>개 &gt;\r\n          </Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StoreInfo;\r\n","import React, { useEffect, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport CatNav from '../components/CatNav';\r\nimport DetailMenus from '../components/DetailMenus';\r\nimport Bill from './Bill';\r\nimport DeliveryInfo from './DeliveryInfo';\r\nimport './Details.scss';\r\nimport StoreInfo from './StoreInfo';\r\nimport { getDetails } from '../reducers/data';\r\n\r\nconst Details = ({ storeId }) => {\r\n  const contentRef = useRef([]);\r\n\r\n  const details = useSelector((state) => state.data.details);\r\n  const loadingDetails = useSelector((state) => state.data.GET_DETAILS);\r\n  const detailsDisaptch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    detailsDisaptch(getDetails(storeId));\r\n  }, [detailsDisaptch, storeId]);\r\n\r\n  const moveToPage = (index) => () => {\r\n    contentRef.current[index].scrollIntoView({\r\n      block: 'start',\r\n      behavior: 'smooth',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"detail-page\">\r\n      {loadingDetails && '로딩 중'}\r\n      {!loadingDetails && details && (\r\n        <div className=\"detail-left\">\r\n          <img src={details.poster_image} alt=\"대표 이미지\"></img>\r\n          <StoreInfo details={details} />\r\n          <DeliveryInfo details={details} />\r\n          <CatNav details={details} moveToPage={moveToPage} />\r\n          {details.menu_groups.map((category, idx) => (\r\n            <DetailMenus\r\n              category={category}\r\n              storeId={storeId}\r\n              key={category.name}\r\n              ref={(r) => (contentRef.current[idx] = r)}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n      {!loadingDetails && details && (\r\n        <div className=\"detail-right\">\r\n          <Bill />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Details);\r\n","import React, { useEffect } from 'react';\r\nimport { useLocation } from 'react-router';\r\nimport Details from '../components/Details';\r\n\r\nconst DetailPage = ({ match }) => {\r\n  const storeId = match.params.storeId;\r\n\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return <Details storeId={storeId} />;\r\n};\r\n\r\nexport default DetailPage;\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport './PaymentPage.scss';\r\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\r\nimport { ImCreditCard } from 'react-icons/im';\r\nimport { BiWon } from 'react-icons/bi';\r\nimport { removeCart, resetCart } from '../reducers/cart';\r\nconst transStrToInt = (strPrice) => Number(strPrice.replace(',', ''));\r\n\r\nconst PaymentPage = ({ history }) => {\r\n  const storeName = useSelector((state) => state.data.details.title);\r\n  const cartData = useSelector((state) => state.cart.bills);\r\n  const cartDispatch = useDispatch();\r\n  const deliveryCost = useSelector(\r\n    (state) => state.data.details.delivery_charge,\r\n  );\r\n  const [sumPirce, setSumPrice] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const payment = cartData.reduce((acc, cur) => {\r\n      return acc + cur.totalPrice;\r\n    }, 0);\r\n\r\n    setSumPrice(payment);\r\n  }, [cartData]);\r\n\r\n  // 결제 버튼 누르면, cart 정보 초기화, mainPage로 이동\r\n  const onPayBtn = useCallback(() => {\r\n    cartDispatch(resetCart());\r\n    history.push('/');\r\n  }, [cartDispatch, history]);\r\n\r\n  const onRemoveBtn = (id, dataLen) => {\r\n    dataLen !== 1\r\n      ? cartDispatch(removeCart(id))\r\n      : alert('최소 한 가지 선택하세요');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"payment-page\">\r\n        <div className=\"payment-content\">\r\n          <h4 className=\"payment-content-header\">결제하기</h4>\r\n          <div className=\"payment-content-adrress\">\r\n            <h4>배달 정보</h4>\r\n            <div>\r\n              <div>\r\n                <p>주소</p>\r\n                <input placeholder=\"(필수) 상세주소 입력\"></input>\r\n              </div>\r\n              <div>\r\n                <p>휴대전화번호</p>\r\n                <input placeholder=\"(필수) 휴대전화 번호 입력\"></input>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"payment-content-message\">\r\n            <h4>주문시 요청사항</h4>\r\n            <div>\r\n              <textarea placeholder=\"문 앞에 두고 가주세요.\"></textarea>\r\n            </div>\r\n          </div>\r\n          <div className=\"payment-content-way\">\r\n            <h4>결제수단 선택</h4>\r\n            <p>웹 결제</p>\r\n            <div className=\"payment-way-btn\">\r\n              <div>\r\n                <ImCreditCard /> 신용카드\r\n              </div>\r\n              <div>\r\n                <BiWon /> 현금\r\n              </div>\r\n            </div>\r\n            <p>현장 결제</p>\r\n            <div className=\"payment-way-btn\">\r\n              <div>\r\n                <ImCreditCard />\r\n                신용카드\r\n              </div>\r\n              <div>\r\n                <BiWon />\r\n                현금\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"payment-content-coupon\">\r\n            <h4>할인방법</h4>\r\n            <div>\r\n              <p>쿠폰</p>\r\n              <input placeholder=\"쿠폰 코드 입력\"></input>\r\n              <button>적용</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"payment-info\">\r\n          <p className=\"payment-info-header\">주문 내역</p>\r\n          <p className=\"payment-info-store\">{storeName}</p>\r\n          {cartData.map((data) => (\r\n            <div className=\"bill-content-data\" key={data.id}>\r\n              <div className=\"bill-content-data-header\">\r\n                <p>\r\n                  {`${data.id}  `} <strong>{data.menuName}</strong>\r\n                </p>\r\n                <p>\r\n                  {data.totalPrice}원{' '}\r\n                  <AiOutlineCloseCircle\r\n                    onClick={() => onRemoveBtn(data.id, cartData.length)}\r\n                  />\r\n                </p>\r\n              </div>\r\n              <p className=\"bill-content-data-options\">{data.optionMenus}</p>\r\n            </div>\r\n          ))}\r\n          <div className=\"payment-info-delivery_cost\">\r\n            <p>배달료</p>\r\n            <p>{deliveryCost}원</p>\r\n          </div>\r\n          <div className=\"payment-info-total_price\">\r\n            <p>총 결제 금액</p>\r\n            <p>{sumPirce + transStrToInt(deliveryCost)}</p>\r\n          </div>\r\n          <div className=\"payment-pay_button\">\r\n            <button onClick={() => onPayBtn()}>\r\n              <p>총 {sumPirce + transStrToInt(deliveryCost)}원</p>\r\n              <p>결제하기</p>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(PaymentPage);\r\n\r\n// const onSendCartData = () => {\r\n//   const sendData = {\r\n//     storeName,\r\n//     cartData,\r\n//     deliveryCost,\r\n//   };\r\n//   const response = await axios.post();\r\n// };\r\n","import axios from 'axios';\r\n\r\nconst client = axios.create();\r\n\r\n// client.defaults.baseURL = 'https://delivery-service-web.herokuapp.com/api';\r\nclient.defaults.withCredentials = true;\r\n\r\n// const ACCESS_TOKEN = localStorage.getItem('access-token');\r\n\r\n// client.defaults.headers.common['Authorization'] = `Bearer ${ACCESS_TOKEN}`;\r\nexport default client;\r\n","import client from './client';\r\n\r\n// https://delivery-service-web.herokuapp.com/api/documentation\r\n\r\nexport const login = ({ email, password }) =>\r\n  client.post('/auth/login', { email, password });\r\n\r\nexport const register = ({ name, email, password }) =>\r\n  client.post('/auth/register', { name, email, password });\r\n\r\nexport const check = () => client.get('/auth/user');\r\n\r\nexport const logout = () => client.delete('/auth/logout');\r\n","import * as authApi from '../lib/authorization';\r\nimport { call, put, takeLatest } from 'redux-saga/effects';\r\nimport { finishLoding, startLoading } from './loading';\r\nimport client from '../lib/client';\r\n\r\nconst CHANGE_FIELD = 'auth/CHANGE_FIELD';\r\nconst INITIALIZE_FORM = 'auth/INITIALIZE_FORM';\r\n\r\nconst LOGIN = 'auth/LOGIN';\r\nconst LOGIN_SUCCESS = 'auth/LOGIN_SUCCESS';\r\nconst LOGIN_FAILURE = 'auth/LOGIN_FAILURE';\r\n\r\nconst REGISTER = 'auth/REGISTER';\r\nconst REGISTER_SUCCESS = 'auth/REGISTER_SUCCESS';\r\nconst REGISTER_FAILURE = 'auth/REGISTER_FAILURE';\r\n\r\nconst CHECK = 'user/CHECK';\r\nconst CHECK_SUCCESS = 'user/CHECK_SUCCESS';\r\nconst CHECK_FAILURE = 'user/CHECK_FAILURE';\r\n\r\nconst LOGOUT = 'auth/LOGOUT';\r\nconst LOGOUT_SUCCESS = 'auth/LOGOUT_SUCCESS';\r\nconst LOGOUT_FAILURE = 'auth/LOGOUT_FAILURE';\r\n\r\nexport const changeField = ({ form, key, value }) => ({\r\n  type: CHANGE_FIELD,\r\n  form, // lgoin인지, register 인지\r\n  key, // username, password,\r\n  value, // 실제 바꾸려는 값\r\n});\r\n\r\nexport const initializeForm = (form) => ({\r\n  type: INITIALIZE_FORM,\r\n  form,\r\n});\r\n\r\nexport const login = ({ email, password }) => ({\r\n  type: LOGIN,\r\n  email,\r\n  password,\r\n});\r\n\r\nexport const register = ({ name, email, password }) => ({\r\n  type: REGISTER,\r\n  name,\r\n  email,\r\n  password,\r\n});\r\n\r\nexport const check = () => ({\r\n  type: CHECK,\r\n});\r\n\r\nexport const logout = (token) => ({\r\n  type: LOGOUT,\r\n  token,\r\n});\r\n\r\n// saga 생성\r\nfunction* loginSaga(action) {\r\n  yield put(startLoading(LOGIN));\r\n  try {\r\n    const { email, password } = action;\r\n    const response = yield call(authApi.login, { email, password });\r\n    const ACCESS_TOKEN = response.headers.authorization;\r\n\r\n    client.defaults.headers.common['Authorization'] = `Bearer ${ACCESS_TOKEN}`;\r\n    localStorage.setItem('access_token', ACCESS_TOKEN);\r\n\r\n    yield put({\r\n      type: LOGIN_SUCCESS,\r\n      payload: response.data,\r\n    });\r\n  } catch (e) {\r\n    yield put({\r\n      type: LOGIN_FAILURE,\r\n      payload: e,\r\n      error: true,\r\n    });\r\n  }\r\n  yield put(finishLoding(LOGIN));\r\n}\r\n\r\nfunction* registerSaga(action) {\r\n  yield put(startLoading(REGISTER));\r\n  try {\r\n    const { name, email, password } = action;\r\n    const response = yield call(authApi.register, {\r\n      name,\r\n      email,\r\n      password,\r\n    });\r\n\r\n    yield put({\r\n      type: REGISTER_SUCCESS,\r\n      payload: response.data,\r\n    });\r\n  } catch (e) {\r\n    yield put({\r\n      type: REGISTER_FAILURE,\r\n      payload: e,\r\n      error: true,\r\n    });\r\n  }\r\n  yield put(finishLoding(REGISTER));\r\n}\r\n\r\nfunction* checkSaga() {\r\n  yield put(startLoading(CHECK));\r\n  try {\r\n    const response = yield call(authApi.check);\r\n\r\n    yield put({\r\n      type: CHECK_SUCCESS,\r\n      payload: response.data,\r\n    });\r\n  } catch (e) {\r\n    yield put({\r\n      type: CHECK_FAILURE,\r\n      payload: e,\r\n      error: true,\r\n    });\r\n  }\r\n  yield put(finishLoding(CHECK));\r\n}\r\n\r\nfunction* logoutSaga(action) {\r\n  yield put(startLoading(LOGOUT));\r\n\r\n  try {\r\n    const ACCESS_TOKEN = action.token;\r\n    client.defaults.headers.common['Authorization'] = `Bearer ${ACCESS_TOKEN}`;\r\n\r\n    yield call(authApi.logout);\r\n    localStorage.removeItem('user');\r\n    localStorage.removeItem('access_token');\r\n\r\n    yield put({\r\n      type: LOGOUT_SUCCESS,\r\n    });\r\n  } catch (e) {\r\n    yield put({\r\n      type: LOGOUT_FAILURE,\r\n      payload: e,\r\n      error: true,\r\n    });\r\n  }\r\n  yield put(finishLoding(LOGOUT));\r\n}\r\n\r\n// SAGA 통합\r\nexport function* authSaga() {\r\n  yield takeLatest(LOGIN, loginSaga);\r\n  yield takeLatest(REGISTER, registerSaga);\r\n  yield takeLatest(CHECK, checkSaga);\r\n  yield takeLatest(LOGOUT, logoutSaga);\r\n}\r\n\r\nconst initialStete = {\r\n  register: {\r\n    name: '',\r\n    password: '',\r\n    passwordConfirm: '',\r\n    email: '',\r\n    phoneNum: '',\r\n  },\r\n  login: {\r\n    email: '',\r\n    password: '',\r\n  },\r\n  auth: null,\r\n  authError: null,\r\n  user: null,\r\n};\r\n\r\nconst auth = (state = initialStete, action) => {\r\n  switch (action.type) {\r\n    case CHANGE_FIELD:\r\n      return {\r\n        ...state,\r\n        [action.form]: {\r\n          ...state[action.form],\r\n          [action.key]: action.value,\r\n        },\r\n      };\r\n    case INITIALIZE_FORM:\r\n      return {\r\n        ...state,\r\n        [action.form]: initialStete[action.form],\r\n      };\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        authError: null,\r\n        auth: action.payload,\r\n      };\r\n    case LOGIN_FAILURE:\r\n      return {\r\n        ...state,\r\n        authError: action.payload,\r\n      };\r\n    case CHECK_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n      };\r\n    case CHECK_FAILURE:\r\n      return {\r\n        ...state,\r\n        checkError: action.payload,\r\n      };\r\n    case LOGOUT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        auth: null,\r\n        user: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default auth;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { logout } from '../reducers/auth';\r\nimport './Header.scss';\r\n\r\nconst Header = () => {\r\n  const user = useSelector((state) => state.auth.user);\r\n  const dispatch = useDispatch();\r\n\r\n  const onLogoutBtn = () => {\r\n    dispatch(logout(localStorage.getItem('access_token')));\r\n  };\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header_logo\">로고 위치</div>\r\n      <div className=\"header_seaerch\">검색 위치</div>\r\n      {user ? (\r\n        <button onClick={() => onLogoutBtn()}>로그아웃</button>\r\n      ) : (\r\n        <button>\r\n          <Link to=\"login\">로그인</Link>\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { changeField, initializeForm, login, check } from '../reducers/auth';\r\nimport './LoginPage.scss';\r\n\r\nconst LoginPage = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const { form, auth, authError, user } = useSelector(({ auth }) => ({\r\n    form: auth.login,\r\n    auth: auth.auth,\r\n    authError: auth.authError,\r\n    user: auth.user,\r\n  }));\r\n\r\n  const onChange = (e) => {\r\n    const { value, name } = e.target;\r\n    dispatch(\r\n      changeField({\r\n        form: 'login',\r\n        key: name,\r\n        value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { email, password } = form;\r\n    dispatch(login({ email, password }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(initializeForm('login'));\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (authError) {\r\n      alert('로그인 실패');\r\n      return;\r\n    }\r\n    if (auth) {\r\n      dispatch(check());\r\n    }\r\n  }, [auth, authError, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      history.push('/');\r\n\r\n      try {\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n      } catch (e) {\r\n        console.log('localStorage is not working');\r\n      }\r\n    }\r\n  }, [history, user]);\r\n\r\n  return (\r\n    <div className=\"loginPage\">\r\n      <header className=\"login-title\">\r\n        <h1 className=\"login-logo\">\r\n          {/* <img src=\"/images/coupang-logo.jpg\" alt=\"coupang logo\" /> */}\r\n        </h1>\r\n      </header>\r\n      <main className=\"login-main\">\r\n        <form onSubmit={onSubmit}>\r\n          <div className=\"login-content\">\r\n            <input\r\n              name=\"email\"\r\n              type=\"text\"\r\n              placeholder=\"아이디(이메일)\"\r\n              onChange={onChange}\r\n              // Reducer로 데이터가 변경됐을 때 input 작동\r\n              // undefined 에러 처리 || ''\r\n              value={form.email || ''}\r\n            />\r\n            <input\r\n              name=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"비밀번호\"\r\n              onChange={onChange}\r\n              value={form.password || ''}\r\n            />\r\n          </div>\r\n          <div className=\"login-message\">\r\n            <div className=\"login-checkbox\">\r\n              <input type=\"checkbox\" id=\"auto-login\" />\r\n              <label htmlFor=\"auto-login\">자동로그인</label>\r\n            </div>\r\n            <p className=\"login-search\">아이디(이메일)/비밀번호 찾기</p>\r\n          </div>\r\n          <div className=\"login-submit\">\r\n            <button className=\"login-login\">로그인</button>\r\n          </div>\r\n        </form>\r\n      </main>\r\n      <footer className=\"login-register\">\r\n        <Link to=\"/register\">\r\n          <p>회원가입</p>\r\n        </Link>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { changeField, initializeForm, register } from '../reducers/auth';\r\nimport './RegisterPage.scss';\r\n\r\nconst RegisterPage = () => {\r\n  const authDispatch = useDispatch();\r\n  const { form } = useSelector(({ auth }) => ({\r\n    form: auth.register,\r\n  }));\r\n\r\n  const onChange = (e) => {\r\n    const { value, name } = e.target;\r\n    console.log(value);\r\n    console.log(name);\r\n    authDispatch(\r\n      changeField({\r\n        form: 'register',\r\n        key: name,\r\n        value,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { name, password, email } = form;\r\n    console.log(name);\r\n    console.log(email);\r\n    console.log(password);\r\n    authDispatch(register({ name, email, password }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    authDispatch(initializeForm('register'));\r\n  }, [authDispatch]);\r\n\r\n  return (\r\n    <div className=\"registerPage\">\r\n      <header className=\"register-title\">\r\n        <h1 className=\"register-logo\">\r\n          <img src=\"/images/coupang-logo.jpg\" alt=\"coupang logo\" />\r\n        </h1>\r\n      </header>\r\n      <main className=\"register-main\">\r\n        <div className=\"register-content\">\r\n          <p>회원정보를 입력해주세요</p>\r\n          <form className=\"register-form\" onSubmit={onSubmit}>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"아이디(이메일)\"\r\n              onChange={onChange}\r\n              value={form.email || ''}\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"비밀번호\"\r\n              onChange={onChange}\r\n              value={form.password || ''}\r\n            />\r\n            <input\r\n              type=\"password\"\r\n              name=\"passwordConfirm\"\r\n              placeholder=\"비밀번호 확인\"\r\n              onChange={onChange}\r\n              value={form.passwordConfirm || ''}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              placeholder=\"이름\"\r\n              onChange={onChange}\r\n              value={form.name || ''}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"phoneNum\"\r\n              placeholder=\"휴대폰 번호\"\r\n              onChange={onChange}\r\n              value={form.phoneNum || ''}\r\n            />\r\n            <div>\r\n              <button className=\"register-submit\">동의하고 가입하기</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </main>\r\n      <footer className=\"register-footer\">\r\n        <p className=\"register-copy\">©Coupang Corp. All rights reserved</p>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterPage;\r\n\r\n/* <p>쿠팡 서비스약관에 동의해주세요.</p>\r\n<div className=\"reg-agree-all\">\r\n  <input type=\"checkbox\" id=\"all\" />\r\n  <label htmlFor=\"all\">모두 동의합니다.</label>\r\n</div> */\r\n/* <div className=\"reg-agree-form\">\r\n  <ul>\r\n    <li>\r\n      <input type=\"checkbox\" id=\"age\" />\r\n      <label htmlFor=\"age\">[필수] 만 14세 이상입니다</label>\r\n    </li>\r\n    <li>\r\n      <input type=\"checkbox\" id=\"use\" />\r\n      <label htmlFor=\"use\">[필수] 쿠팡 이용약관 동의.</label>\r\n    </li>\r\n    <li>\r\n      <input type=\"checkbox\" id=\"elect\" />\r\n      <label htmlFor=\"elect\">\r\n        [필수] 전자금융거래 이용약관 동의.\r\n      </label>\r\n    </li>\r\n    <li>\r\n      <input type=\"checkbox\" id=\"collect\" />\r\n      <label htmlFor=\"collect\">\r\n        [필수] 개인정보 수집 및 이용 동의.\r\n      </label>\r\n    </li>\r\n    <li>\r\n      <input type=\"checkbox\" id=\"offer\" />\r\n      <label htmlFor=\"offer\">[필수] 개인정보 제공 동의.</label>\r\n    </li>\r\n  </ul>\r\n</div> */\r\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport FavoritePage from './pages/FavoritePage';\nimport MainPage from './pages/MainPage';\nimport OrderHistoryPage from './pages/OrderHistoryPage';\nimport ProfilePage from './pages/ProfilePage';\nimport SearchPage from './pages/SearchPage';\nimport DetailPage from './pages/DetailPage';\nimport PaymentPage from './pages/PaymentPage';\nimport Header from './components/Header';\nimport './App.scss';\nimport LoginPage from './pages/LoginPage';\nimport RegisterPage from './pages/RegisterPage';\nimport TestPage from './pages/TestPage';\n\nconst App = () => {\n  return (\n    <div className=\"body\">\n      <Switch>\n        <Route path=\"/login\" component={LoginPage} />\n        <Route path=\"/register\" component={RegisterPage} />\n        <>\n          <Header />\n          <Navbar />\n          <Route path=\"/\" exact={true} component={MainPage} />\n          <Route path=\"/search\" component={SearchPage} />\n          <Route path=\"/orderHistory\" component={OrderHistoryPage} />\n          <Route path=\"/favorite\" component={FavoritePage} />\n          <Route path=\"/profile\" component={ProfilePage} />\n          <Route path=\"/detail/:storeId\" exact={true} component={DetailPage} />\n          <Route\n            path=\"/detail/:storeId/payment\"\n            exact={true}\n            component={PaymentPage}\n          />\n        </>\n        <Route render={({ location }) => <div>존재하지 않는 페이지</div>} />\n      </Switch>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\r\nimport { all } from 'redux-saga/effects';\r\nimport cart from './cart';\r\nimport loading from './loading';\r\nimport data, { dataSaga } from './data';\r\nimport auth, { authSaga } from './auth';\r\n\r\nconst rootReducer = combineReducers({\r\n  data,\r\n  cart,\r\n  loading,\r\n  auth,\r\n});\r\n\r\nexport function* rootSaga() {\r\n  yield all([dataSaga(), authSaga()]);\r\n}\r\n\r\nexport default rootReducer;\r\n","import { createStore, applyMiddleware } from 'redux';\r\n// import { createLogger } from 'redux-logger';\r\nimport rootReducer, { rootSaga } from './index';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n// const logger = createLogger();\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(sagaMiddleware)),\r\n);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './reducers/store';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter basename=\"delivery-service\">\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}